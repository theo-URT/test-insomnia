_id: spc_76346d3df4264b5dacee89040425d910
type: ApiSpec
parentId: wrk_2336beb589954b61a99abdfe371b5990
modified: 1669816019448
created: 1669804482726
fileName: my-spec.yaml
contents: >-
  {

  "openapi": "3.0.0",

  "paths": {

  "/crm-api/contacts": {

  "post": {

  "operationId": "createContact",

  "summary": "Create Contact",

  "description": "Creates a Contact",

  "parameters": [],

  "requestBody": {

  "required": true,

  "content": {

  "application/json": {

  "schema": {

  "$ref": "#/components/schemas/CreateContactRequestDto"

  }

  }

  }

  },

  "responses": {

  "200": {

  "description": "Example of a success response.",

  "content": {

  "application/json": {

  "schema": {

  "$ref": "#/components/schemas/CreateContactResponseDto"

  }

  }

  }

  }

  },

  "security": [

  {

  "bearer": []

  }

  ]

  }

  },

  "/crm-api/company": {

  "post": {

  "operationId": "createCompany",

  "summary": "Create Company",

  "description": "Creates a company",

  "parameters": [],

  "requestBody": {

  "required": true,

  "content": {

  "application/json": {

  "schema": {

  "$ref": "#/components/schemas/CreateCompanyRequestDto"

  }

  }

  }

  },

  "responses": {

  "200": {

  "description": "Example of a success response.",

  "content": {

  "application/json": {

  "schema": {

  "$ref": "#/components/schemas/CreateCompanyResponseDto"

  }

  }

  }

  }

  },

  "security": [

  {

  "bearer": []

  }

  ]

  }

  },

  "/crm-api/company/add-contact": {

  "post": {

  "operationId": "addContactsToCompany",

  "summary": "Add Contacts to Company",

  "description": "Adds Contacts to a Company",

  "parameters": [],

  "requestBody": {

  "required": true,

  "content": {

  "application/json": {

  "schema": {

  "$ref": "#/components/schemas/AddContactsToCompanyRequestDto"

  }

  }

  }

  },

  "responses": {

  "200": {

  "description": "Example of a success response.",

  "content": {

  "application/json": {

  "schema": {

  "$ref": "#/components/schemas/CreateCompanyResponseDto"

  }

  }

  }

  }

  },

  "security": [

  {

  "bearer": []

  }

  ]

  }

  }

  },

  "info": {

  "title": "ManageSpace CRM API",

  "description": "ManageSpace CRM API Documentation",

  "version": "1.0",

  "contact": {}

  },

  "tags": [],

  "servers": [],

  "components": {

  "schemas": {

  "CreateContactAddressRequestDto": {

  "type": "object",

  "properties": {

  "addressLineOne": {

  "type": "string",

  "example": "12 Madison Lane",

  "description": "First line of the address."

  },

  "addressLineTwo": {

  "type": "string",

  "example": "Flat 21",

  "description": "Second line of the address."

  },

  "city": {

  "type": "string",

  "example": "Plymouth",

  "description": "City the address is in."

  },

  "province": {

  "type": "string",

  "example": "New York",

  "description": "State/Province the address is in."

  },

  "postCode": {

  "type": "string",

  "example": "SE9 6FY",

  "description": "Post code of the address."

  },

  "country": {

  "type": "string",

  "example": "USA",

  "description": "Country the address is in."

  }

  },

  "required": [

  "addressLineOne",

  "addressLineTwo",

  "city",

  "province",

  "postCode",

  "country"

  ]

  },

  "CreateContactRequestDto": {

  "type": "object",

  "properties": {

  "email": {

  "type": "string",

  "example": "test123@unionrealtime.com",

  "description": "A valid email."

  },

  "firstName": {

  "type": "string",

  "example": "Jason",

  "description": "User first name"

  },

  "middleInitial": {

  "type": "string",

  "example": "Grubble",

  "description": "User last name"

  },

  "lastName": {

  "type": "string",

  "example": "Grubble",

  "description": "User last name"

  },

  "phoneNumber": {

  "type": "string",

  "example": "7953669521 | 447953669521",

  "description": "Phone number of the contact, either with or without the country code."

  },

  "mobileNumber": {

  "type": "string",

  "example": "7953669521 | 447953669521",

  "description": "Mobile number of the contact, either with or without the country code."

  },

  "faxNumber": {

  "type": "string",

  "example": "7953669521 | 447953669521",

  "description": "Fax number of the contact, either with or without the country code."

  },

  "contactAddress": {

  "example": {

  "addressLineOne": "12 Madison Lane",

  "addressLineTwo": "Flat 21",

  "city": "Plymouth",

  "province": "New York",

  "postCode": "SE9 6FY",

  "country": "USA"

  },

  "description": "Address of the contact",

  "allOf": [

  {

  "$ref": "#/components/schemas/CreateContactAddressRequestDto"

  }

  ]

  }

  },

  "required": [

  "email",

  "firstName",

  "lastName",

  "phoneNumber",

  "mobileNumber",

  "faxNumber",

  "contactAddress"

  ]

  },

  "CreateContactResponseDto": {

  "type": "object",

  "properties": {

  "contactId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "User ID"

  },

  "email": {

  "type": "string",

  "example": "test123@unionrealtime.com",

  "description": "A valid email."

  },

  "firstName": {

  "type": "string",

  "example": "Jason",

  "description": "User first name"

  },

  "middleInitial": {

  "type": "string",

  "example": "Grubble",

  "description": "User last name"

  },

  "lastName": {

  "type": "string",

  "example": "Grubble",

  "description": "User last name"

  },

  "createdAt": {

  "format": "date-time",

  "type": "string",

  "example": "2022-11-16T14:51:28.999Z",

  "description": "time of creation"

  }

  },

  "required": [

  "contactId",

  "email",

  "firstName",

  "lastName",

  "createdAt"

  ]

  },

  "CreateCompanyAddressRequestDto": {

  "type": "object",

  "properties": {

  "addressLineOne": {

  "type": "string",

  "example": "12 Madison Lane",

  "description": "First line of the address."

  },

  "addressLineTwo": {

  "type": "string",

  "example": "Flat 21",

  "description": "Second line of the address."

  },

  "city": {

  "type": "string",

  "example": "Plymouth",

  "description": "City the address is in."

  },

  "province": {

  "type": "string",

  "example": "New York",

  "description": "State/Province the address is in."

  },

  "postCode": {

  "type": "string",

  "example": "SE9 6FY",

  "description": "Post code of the address."

  },

  "country": {

  "type": "string",

  "example": "USA",

  "description": "Country the address is in."

  }

  },

  "required": [

  "addressLineOne",

  "addressLineTwo",

  "city",

  "province",

  "postCode",

  "country"

  ]

  },

  "CreateCompanyRequestDto": {

  "type": "object",

  "properties": {

  "companyName": {

  "type": "string",

  "example": "Manage Space",

  "description": "Company name"

  },

  "isTenant": {

  "type": "boolean",

  "example": false,

  "description": "Whether the user is tenant or not"

  },

  "phoneNumber": {

  "type": "string",

  "example": "7953669521 | 447953669521",

  "description": "Phone number of the company, either with or without the country code."

  },

  "mobileNumber": {

  "type": "string",

  "example": "7953669521 | 447953669521",

  "description": "Mobile number of the company, either with or without the country code."

  },

  "faxNumber": {

  "type": "string",

  "example": "7953669521 | 447953669521",

  "description": "Fax number of the company, either with or without the country code."

  },

  "companyAddress": {

  "example": {

  "addressLineOne": "12 Madison Lane",

  "addressLineTwo": "Flat 21",

  "city": "Plymouth",

  "province": "New York",

  "postCode": "SE9 6FY",

  "country": "USA"

  },

  "description": "Address of the company",

  "allOf": [

  {

  "$ref": "#/components/schemas/CreateCompanyAddressRequestDto"

  }

  ]

  }

  },

  "required": [

  "companyName",

  "isTenant",

  "phoneNumber",

  "mobileNumber",

  "faxNumber",

  "companyAddress"

  ]

  },

  "CreateCompanyResponseDto": {

  "type": "object",

  "properties": {

  "companyName": {

  "type": "string",

  "example": "Jason",

  "description": "User first name"

  }

  },

  "required": [

  "companyName"

  ]

  },

  "ContactId": {

  "type": "object",

  "properties": {

  "contactId": {

  "type": "string",

  "example": "3a27410a-cd83-423e-9e21-dc1c5c9280a9",

  "description": "A valid contact uuid."

  }

  },

  "required": [

  "contactId"

  ]

  },

  "AddContactsToCompanyRequestDto": {

  "type": "object",

  "properties": {

  "contacts": {

  "example": [

  {

  "contactId": "uuid-for-contact"

  },

  {

  "contactId": "uuid-for-contact"

  }

  ],

  "description": "Array of users",

  "type": "array",

  "items": {

  "$ref": "#/components/schemas/ContactId"

  }

  },

  "companyId": {

  "type": "string",

  "example": "3a27410a-cd83-423e-9e21-dc1c5c9280a9",

  "description": "A valid email."

  }

  },

  "required": [

  "contacts",

  "companyId"

  ]

  },

  "BaseError": {

  "type": "object",

  "properties": {

  "message": {

  "type": "string",

  "readOnly": true,

  "example": "This is a message describes the errors caught"

  },

  "code": {

  "type": "string",

  "readOnly": true,

  "example": "This is a error code."

  }

  },

  "required": [

  "message",

  "code"

  ]

  },

  "BadRequestErrorResponseDto": {

  "type": "object",

  "properties": {

  "data": {

  "readOnly": true,

  "example": [],

  "type": "array",

  "items": {

  "type": "string"

  }

  },

  "success": {

  "type": "boolean",

  "readOnly": true,

  "example": false

  },

  "error": {

  "readOnly": true,

  "example": {

  "message": "Encountered 1 validation errors - {error-message}",

  "code": "INVALID_PARAM"

  },

  "allOf": [

  {

  "$ref": "#/components/schemas/BaseError"

  }

  ]

  }

  },

  "required": [

  "data",

  "success",

  "error"

  ]

  },

  "UnauthorizedErrorResponseDto": {

  "type": "object",

  "properties": {

  "data": {

  "readOnly": true,

  "example": [],

  "type": "array",

  "items": {

  "type": "string"

  }

  },

  "success": {

  "type": "boolean",

  "readOnly": true,

  "example": false

  },

  "error": {

  "readOnly": true,

  "example": {

  "message": "Unauthorized",

  "code": "UNAUTHORIZED"

  },

  "allOf": [

  {

  "$ref": "#/components/schemas/BaseError"

  }

  ]

  }

  },

  "required": [

  "data",

  "success",

  "error"

  ]

  },

  "ForbiddenErrorResponseDto": {

  "type": "object",

  "properties": {

  "data": {

  "readOnly": true,

  "example": [],

  "type": "array",

  "items": {

  "type": "string"

  }

  },

  "success": {

  "type": "boolean",

  "readOnly": true,

  "example": false

  },

  "error": {

  "readOnly": true,

  "example": {

  "message": "Access Forbidden",

  "code": "FORBIDDEN"

  },

  "allOf": [

  {

  "$ref": "#/components/schemas/BaseError"

  }

  ]

  }

  },

  "required": [

  "data",

  "success",

  "error"

  ]

  },

  "NotFoundErrorResponseDto": {

  "type": "object",

  "properties": {

  "data": {

  "readOnly": true,

  "example": [],

  "type": "array",

  "items": {

  "type": "string"

  }

  },

  "success": {

  "type": "boolean",

  "readOnly": true,

  "example": false

  },

  "error": {

  "readOnly": true,

  "example": {

  "message": "Resource not found.",

  "code": "RESOURCE_NOT_FOUND"

  },

  "allOf": [

  {

  "$ref": "#/components/schemas/BaseError"

  }

  ]

  }

  },

  "required": [

  "data",

  "success",

  "error"

  ]

  },

  "InternalServerErrorResponseDto": {

  "type": "object",

  "properties": {

  "data": {

  "readOnly": true,

  "example": [],

  "type": "array",

  "items": {

  "type": "string"

  }

  },

  "success": {

  "type": "boolean",

  "readOnly": true,

  "example": false

  },

  "error": {

  "readOnly": true,

  "example": {

  "message": "Internal Server Error",

  "code": "INTERNAL_ERROR"

  },

  "allOf": [

  {

  "$ref": "#/components/schemas/BaseError"

  }

  ]

  }

  },

  "required": [

  "data",

  "success",

  "error"

  ]

  },

  "UnitCreatedRequestDto": {

  "type": "object",

  "properties": {

  "orgId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Org ID"

  },

  "siteId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Site ID"

  }

  },

  "required": [

  "orgId",

  "siteId"

  ]

  },

  "UnitDeletedRequestDto": {

  "type": "object",

  "properties": {

  "orgId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Org ID"

  },

  "siteId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Site ID"

  }

  },

  "required": [

  "orgId",

  "siteId"

  ]

  },

  "SiteCreatedRequestDto": {

  "type": "object",

  "properties": {

  "orgId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Org ID"

  },

  "siteId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Site ID"

  }

  },

  "required": [

  "orgId",

  "siteId"

  ]

  },

  "SiteDeletedRequestDto": {

  "type": "object",

  "properties": {

  "orgId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Org ID"

  },

  "siteId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Site ID"

  }

  },

  "required": [

  "orgId",

  "siteId"

  ]

  },

  "UnitSubscriptionUpdatedRequestDto": {

  "type": "object",

  "properties": {}

  },

  "OrgCreatedRequestDto": {

  "type": "object",

  "properties": {

  "orgId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Org ID"

  }

  },

  "required": [

  "orgId"

  ]

  },

  "OrgDeletedRequestDto": {

  "type": "object",

  "properties": {

  "orgId": {

  "type": "string",

  "example": "fe26693b-a4f6-4e4a-9bfd-179dbc77a81",

  "description": "Org ID"

  }

  },

  "required": [

  "orgId"

  ]

  }

  }

  }

  }
contentType: yaml
